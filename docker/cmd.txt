### Docker Container:

1. **`docker container ls`**
   - *Descrição:* Lista os contêineres em execução.
   - *Exemplo:* `docker container ls`

2. **`docker container ls -a`**
   - *Descrição:* Lista todos os contêineres, incluindo os que não estão em execução.
   - *Exemplo:* `docker container ls -a`

3. **`docker container run <options> <image>`**
   - *Descrição:* Cria e inicia um contêiner a partir de uma imagem.
   - *Exemplo:* `docker container run -d -p 8080:80 nginx`

4. **`docker container exec -it <container> <command>`**
   - *Descrição:* Executa um comando dentro de um contêiner em execução.
   - *Exemplo:* `docker container exec -it my_container bash`

5. **`docker container stop <container>`**
   - *Descrição:* Para a execução de um contêiner em execução.
   - *Exemplo:* `docker container stop my_container`

6. **`docker container rm <container>`**
   - *Descrição:* Remove um ou mais contêineres.
   - *Exemplo:* `docker container rm my_container`

### Docker Image:

7. **`docker image ls`**
   - *Descrição:* Lista as imagens disponíveis no sistema.
   - *Exemplo:* `docker image ls`

8. **`docker image pull <image>`**
   - *Descrição:* Baixa uma imagem do Docker Hub ou de um repositório específico.
   - *Exemplo:* `docker image pull ubuntu`

9. **`docker image build -t <image_name>:<tag> <path>`**
   - *Descrição:* Constrói uma imagem a partir de um Dockerfile no diretório especificado.
   - *Exemplo:* `docker image build -t myapp:1.0 .`

10. **`docker image rm <image>`**
    - *Descrição:* Remove uma ou mais imagens.
    - *Exemplo:* `docker image rm my_image`

### Docker Volume:

11. **`docker volume ls`**
    - *Descrição:* Lista os volumes Docker disponíveis.
    - *Exemplo:* `docker volume ls`

12. **`docker volume create <volume_name>`**
    - *Descrição:* Cria um novo volume Docker.
    - *Exemplo:* `docker volume create my_volume`

13. **`docker volume inspect <volume>`**
    - *Descrição:* Exibe detalhes sobre um volume.
    - *Exemplo:* `docker volume inspect my_volume`

14. **`docker volume rm <volume>`**
    - *Descrição:* Remove um ou mais volumes Docker.
    - *Exemplo:* `docker volume rm my_volume`

### Docker Compose:

15. **`docker-compose up`**
    - *Descrição:* Cria e inicia todos os serviços definidos no arquivo `docker-compose.yml`.
    - *Exemplo:* `docker-compose up -d`

16. **`docker-compose down`**
    - *Descrição:* Para e remove todos os containers, redes e volumes definidos no arquivo `docker-compose.yml`.
    - *Exemplo:* `docker-compose down`

17. **`docker-compose build`**
    - *Descrição:* Constrói ou reconstrói serviços especificados no arquivo `docker-compose.yml`.
    - *Exemplo:* `docker-compose build`

18. **`docker-compose ps`**
    - *Descrição:* Lista todos os containers criados pelo `docker-compose up`, mostrando seu estado.
    - *Exemplo:* `docker-compose ps`

19. **`docker-compose restart`**
    - *Descrição:* Reinicia todos os containers definidos no arquivo `docker-compose.yml`.
    - *Exemplo:* `docker-compose restart`

20. **`docker-compose stop`**
    - *Descrição:* Para todos os containers sem removê-los.
    - *Exemplo:* `docker-compose stop`

21. **`docker-compose start`**
    - *Descrição:* Inicia todos os containers previamente criados e parados.
    - *Exemplo:* `docker-compose start`

22. **`docker-compose logs`**
    - *Descrição:* Exibe os logs dos serviços. Com a opção `-f` pode-se acompanhar o log em tempo real.
    - *Exemplo:* `docker-compose logs -f`

23. **`docker-compose pull`**
    - *Descrição:* Baixa as imagens configuradas no `docker-compose.yml` sem iniciar os containers.
    - *Exemplo:* `docker-compose pull`

24. **`docker-compose exec`**
    - *Descrição:* Executa um comando em um serviço em execução.
    - *Exemplo:* `docker-compose exec web bash`

25. **`docker-compose run`**
    - *Descrição:* Executa um serviço único definido no `docker-compose.yml`, útil para tarefas pontuais.
    - *Exemplo:* `docker-compose run web python manage.py migrate`

Estes são comandos comuns, mas lembre-se sempre de consultar a documentação oficial do Docker para obter informações detalhadas e opções adicionais: https://docs.docker.com/